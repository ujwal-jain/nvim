    local jdtls_dir = data_dir .. 'mason/packages/jdtls'
    local data_dir = vim.fn.stdpath('data')
    local config_dir = jdtls_dir .. '/config_mac'
    local plugins_dir = jdtls_dir .. '/plugins/'
    local path_to_jar = plugins_dir .. 'org.eclipse.equinox.launcher_1.6.400.v20210924-0641.jar'

    local project_name = vim.fn.fnamemodify(find_root(), ':p:h:t')
    local workspace_dir = data_dir .. '/site/java/workspace-root/' .. project_name
    os.execute("mkdir -p " .. workspace_dir)

    local config = {
      cmd = {
        'java',
        '-Declipse.application=org.eclipse.jdt.ls.core.id1',
        '-Dosgi.bundles.defaultStartLevel=4',
        '-Declipse.product=org.eclipse.jdt.ls.core.product',
        '-Dlog.protocol=true',
        '-Dlog.level=ALL',
        '-Xms1g',
        '--add-modules=ALL-SYSTEM',
        '--add-opens java.base/java.util=ALL-UNNAMED',
        '--add-opens java.base/java.lang=ALL-UNNAMED',

        '-jar', path_to_jar,
        '-configuration', config_dir,
        '-data', workspace_dir,
      },

      root_dir = find_root,
      settings = {
        java = {
          home = '~/Library/Java/JavaVirtualMachines/corretto-17.0.4.1/Contents/Home',
        },
        eclipse = {
          downloadSources = true,
        },
        configuration = {
          updateBuildConfiguration = 'interactive',
          runtimes = {
            {
              name = 'JavaSE-15',
              path = '~/Library/Java/JavaVirtualMachines/corretto-15.0.2/Contents/Home',
            },
            {
              name = 'JavaSE-16',
              path = '~/Library/Java/JavaVirtualMachines/corretto-17.0.4.1/Contents/Home',
            },
          },
        },
        maven = {
          downloadSources = true,
        },
        implementationsCodeLens = {
          enabled = true,
        },
        referencesCodeLens = {
          enabled = true,
        },
        references = {
          includeDecompiledSources = true,
        },
        format = {
          settings = {
            url = vim.fn.stdpath('config') .. "/lang-servers/intellij-java-google-style.xml",
            profile = "GoogleStyle",
          },
        },
      },
      signatureHelp = { enabled = true },
      completion = {
        favoriteStaticMembers = {
          "org.hamcrest.MatcherAssert.assertThat",
          "org.hamcrest.Matchers.*",
          "org.hamcrest.CoreMatchers.*",
          "org.junit.jupiter.api.Assertions.*",
          "java.util.Objects.requireNonNull",
          "java.util.Objects.requireNonNullElse",
          "org.mockito.Mockito.*"
        },
        organizeImports = {
          starThreshold = 9999,
          staticStarThreshold = 9999
        },
        importOrder = {
          "java",
          "javax",
          "org",
          "com",
          "io",
        },
      },
      sources = {
        organizeImports = {
          starThreshold = 9999,
          staticStarThreshold = 9999,
          autoimportUnambiguous = true,
          autoRemoveImports = true,
          automaticOrganize = true,
        },
      },
      codeGeneration = {
        toString = {
          template = "${object.className}{${member.name()}=${member.value}, ${otherMembers}}"
        },
        useBlocks = true,
      },

      flags = {
        allow_incremental_sync = true,
        server_side_fuzzy_completion = true,
      },
      init_options = {
        bundles = {},
      }
    }
